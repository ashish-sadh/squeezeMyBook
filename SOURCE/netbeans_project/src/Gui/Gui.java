/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Gui.java
 *
 * Created on 25 Apr, 2010, 7:42:43 PM
 */

package Gui;

import java.io.*;
import javax.swing.*;
import odt2html.Convert;
import myparser.Html2txt;
import mds.Mds;
import composeHtml.compose;

/**
 *
 * @author aramchanchal
 */
public class Gui extends javax.swing.JFrame {

    /** Creates new form Gui */
    public Gui() {
        initComponents();
    }
    static int aram =50;
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        fileTextBox = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        summarySize = new javax.swing.JSlider();
        saveButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textArea1 = new javax.swing.JTextArea();

        fileChooser.setDialogTitle("Open Files You Want to Summarize");
        fileChooser.setMultiSelectionEnabled(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fileTextBox.setEditable(false);
        fileTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileTextBoxActionPerformed(evt);
            }
        });

        browseButton.setText("Browse");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
                browseButtonActionPerformed1(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setEditable(false);
        textArea.setLineWrap(true);
        textArea.setRows(5);
        textArea.setWrapStyleWord(true);
        textArea.setAutoscrolls(true);
        jScrollPane1.setViewportView(textArea);

        summarySize.setFont(new java.awt.Font("Serif", 0, 13));
        summarySize.setMinorTickSpacing(10);
        summarySize.setPaintLabels(true);
        summarySize.setPaintTicks(true);
        summarySize.setToolTipText("Summary Length");
        summarySize.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                summarySizeStateChanged(evt);
            }
        });
        summarySize.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                summarySizeCaretPositionChanged(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        textArea1.setColumns(20);
        textArea1.setEditable(false);
        textArea1.setLineWrap(true);
        textArea1.setRows(5);
        textArea1.setWrapStyleWord(true);
        textArea1.setAutoscrolls(true);
        jScrollPane2.setViewportView(textArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(saveButton)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(fileTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(browseButton)
                                .addGap(18, 18, 18)
                                .addComponent(summarySize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(115, 115, 115)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(fileTextBox)
                        .addComponent(browseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(summarySize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(saveButton)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {browseButton, fileTextBox});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file[] = fileChooser.getSelectedFiles(); 
        fileTextBox.setText("We have selected "+file.length+" Files for summary");
        int i;
        String[] input= new String[file.length];
        for (i=0;i<file.length;i++){
            input[i]=file[i].getAbsolutePath();
        }
        Convert.main(input);
	String num_doc[] = new String[1];
	num_doc[0] = ""+i;
	Html2txt.main(num_doc);
	for (i=0;i<file.length;i++){
            input[i]="misc"+ File.separator+"doc_parsing"+File.separator+"doc_"+i+ File.separator + "doc"+i +".txt";
		//System.out.println(input[i]);
			//file[i].getAbsolutePath();
        }
	
	
	//Mds.main(input);
        Mds.main(input);
	compose.main();
        try{
        Process Findspace = Runtime.getRuntime().exec("firefox ./misc/final_summary/final.html");
        }catch (Exception e){
        }
        //for (i=0;i<file.length;i++){

        try {
          // What to do with the file, e.g. display it in a TextArea


                    textArea.read( new FileReader("./misc/final_summary/figure_ranking.txt"), null );
                    textArea1.read( new FileReader("./misc/final_summary/table_ranking.txt"), null );
        } catch (IOException ex) {
          System.out.println("problem accessing file"+file[i].getAbsolutePath());
        }
        //}
    } else {
        System.out.println("File access cancelled by user.");
    }

    }//GEN-LAST:event_browseButtonActionPerformed

    private void browseButtonActionPerformed1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed1
     //   textArea.setText(getTitle());
    }//GEN-LAST:event_browseButtonActionPerformed1

    private void fileTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileTextBoxActionPerformed
       // textArea.setText("We have selected "+aram+"Files for summary");
    }//GEN-LAST:event_fileTextBoxActionPerformed

    private void summarySizeCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_summarySizeCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_summarySizeCaretPositionChanged

    private void summarySizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_summarySizeStateChanged
        // TODO add your handling code here:
        JSlider slider1 = (JSlider)evt.getSource();
        if (!slider1.getValueIsAdjusting()){
            aram=slider1.getValue();
            System.out.println(aram);
        }

    }//GEN-LAST:event_summarySizeStateChanged

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
         int returnVal = fileChooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file1 = fileChooser.getSelectedFile();
        try{
            textArea.write(new FileWriter(file1));

        }
        catch(IOException ex){
            System.out.println("problem writing file"+file1.getAbsolutePath());
        }
        }else {
        System.out.println("File access cancelled by user.");
    }
    }//GEN-LAST:event_saveButtonActionPerformed

    public static int get(){
        return aram;
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseButton;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JTextField fileTextBox;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton saveButton;
    private javax.swing.JSlider summarySize;
    private javax.swing.JTextArea textArea;
    private javax.swing.JTextArea textArea1;
    // End of variables declaration//GEN-END:variables

}
